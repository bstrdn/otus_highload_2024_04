version: '3.8'
services:

  app:
    container_name: app
    image: app
    restart: unless-stopped
    environment:
      SERVER_PORT: 9999
      DATASOURCE_MASTER_URL: jdbc:postgresql://localhost:5432/postgres
      DATASOURCE_SLAVE_URL: jdbc:postgresql://localhost:15432/postgres
      DATASOURCE_DEFAULT_SCHEMA: otus_highload
    networks:
      - pgnet

  pgmaster:
    container_name: pgmaster
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres_data_master:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - pgnet


  pgslave:
    container_name: pgslave
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres_data_slave:/var/lib/postgresql/data/
    ports:
      - "15432:5432"
    networks:
      - pgnet

  redis:
    restart: unless-stopped
    image: bitnami/redis:7.0.2
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
      - pgnet


  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - pgnet

  kafka:
    image: confluentinc/cp-kafka:7.1.1
    restart: always
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pgnet


networks:
  pgnet: